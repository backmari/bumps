name: Test

on: [push, pull_request]

jobs:
  test:

    runs-on: ${{ matrix.cfg.os }}
    strategy:
      matrix:
        cfg:
          - { os: ubuntu-latest, py: 3.6 }
          - { os: ubuntu-latest, py: 3.8, doc: 1 }
          - { os: windows-latest, py: 3.8 }
          - { os: macos-latest, py: 3.8 }
      fail-fast: false

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.cfg.py }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.cfg.py }}

    - name: Install build dependencies [Linux only]
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get -y install gcc

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel setuptools
        python -m pip install numpy scipy matplotlib scikit-learn pytest pytest-cov
    
    - name: Install dataclasses for python3.6
      if: matrix.cfg.py == 3.6
      run: |
        python -m pip install dataclasses

    - name: Build package [Linux only]
      if: ${{ runner.os == 'Linux' }}
      run: |
        cd bumps/dream
        gcc -I../../Random123/include/ -fopenmp -shared -lm -fPIC compiled.c -o _compiled.so

    - name: Build package [Linux only]
      if: ${{ runner.os == 'Linux' }}
      run: |
        cd bumps/dream
        gcc -I../../Random123/include/ -fopenmp -shared -lm -fPIC compiled.c -o _compiled.so

    - name: Test with pytest
      run: |
        pytest -v

    - name: Check examples
      run: |
        python check_examples.py --chisq

    - name: Check fitters
      run: |
        python check_fitters.py

    - name: Check that the docs build (linux only)
      if: matrix.cfg.doc == 1
      run: |
        python -m pip install sphinx
        make -j 4 -C doc SPHINXOPTS="-W --keep-going -n" html
